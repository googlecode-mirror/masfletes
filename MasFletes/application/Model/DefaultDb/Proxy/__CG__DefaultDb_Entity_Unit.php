<?php

namespace MasFletes\DefaultDb\Proxy\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DefaultDb_Entity_Unit extends \DefaultDb_Entity_Unit implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getVehicle()
    {
        $this->__load();
        return parent::getVehicle();
    }

    public function setVehicle($vehicle)
    {
        $this->__load();
        return parent::setVehicle($vehicle);
    }

    public function getVehicleType()
    {
        $this->__load();
        return parent::getVehicleType();
    }

    public function setVehicleType($vehicleType)
    {
        $this->__load();
        return parent::setVehicleType($vehicleType);
    }

    public function getBrand()
    {
        $this->__load();
        return parent::getBrand();
    }

    public function setBrand($brand)
    {
        $this->__load();
        return parent::setBrand($brand);
    }

    public function getModel()
    {
        $this->__load();
        return parent::getModel();
    }

    public function setModel($model)
    {
        $this->__load();
        return parent::setModel($model);
    }

    public function getColor()
    {
        $this->__load();
        return parent::getColor();
    }

    public function setColor($color)
    {
        $this->__load();
        return parent::setColor($color);
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }

    public function setComments($comments)
    {
        $this->__load();
        return parent::setComments($comments);
    }

    public function getEconomicNumber()
    {
        $this->__load();
        return parent::getEconomicNumber();
    }

    public function setEconomicNumber($economicNumber)
    {
        $this->__load();
        return parent::setEconomicNumber($economicNumber);
    }

    public function getPlates()
    {
        $this->__load();
        return parent::getPlates();
    }

    public function setPlates($plates)
    {
        $this->__load();
        return parent::setPlates($plates);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'brand', 'model', 'color', 'economicNumber', 'plates', 'comments', 'user', 'vehicle', 'vehicleType');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}